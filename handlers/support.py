from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from states.states import Form
from config.config import config
from keyboards.reply import get_end_chat_keyboard
from keyboards.inline import get_support_keyboard, get_start_keyboard
from keyboards.reply import get_main_menu_keyboard
from handlers.admin import is_moderator

router = Router()
support_chats = {}

@router.callback_query(F.data == "support")
async def show_support_info(callback: CallbackQuery):
    if not callback.message or not callback.bot:
        return
        
    support_text = """üßë‚Äçüíª –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:

1. –ü–æ—á–µ–º—É —Ç–∞–∫ –¥–æ–ª–≥–æ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —á–µ–∫?
‚Ä¢ –ß–µ–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –≤ —Ä—É—á–Ω—É—é, –∞ –Ω–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –î–æ 24 —á–∞—Å–æ–≤ –∑–∞–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ–∫–∞.

2. –ü–æ—á–µ–º—É —Ç–∞–∫ –¥–æ–ª–≥–æ –≤—ã–≤–æ–¥—è—Ç –∑–æ–ª–æ—Ç–æ?
‚Ä¢ –í—ã–≤–æ–¥ –∑–æ–ª–æ—Ç–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 24 —á–∞—Å–æ–≤. –ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –≤—ã–≤–µ—Å—Ç–∏ –≤–∞–º –∑–æ–ª–æ—Ç–æ.

3. –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ —É –≤–∞—Å –ø–æ–∫—É–ø–∞—Ç—å?
‚Ä¢ –í–µ—Å —Ç–æ–≤–∞—Ä –ø–æ–ª—É—á–µ–Ω —á–µ—Å—Ç–Ω—ã–º –ø—É—Ç—ë–º. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –ª—É—á—à–µ –ø–æ–∫—É–ø–∞—Ç—å –≤ –∏–≥—Ä–µ.

üí° –ü—Ä–µ–∂–¥–µ —á–µ–º –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∑–¥–µ—Å—å –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å

–°–≤—è–∑–∞—Ç—å—Å—è - @pr1nce82"""

    await callback.bot.edit_message_text(
        text=support_text,
        chat_id=callback.message.chat.id,
        message_id=callback.message.message_id,
        reply_markup=get_support_keyboard()
    )

@router.callback_query(F.data == "start_support")
async def start_support_chat(callback: CallbackQuery, state: FSMContext):
    if not callback.from_user or not callback.message:
        return
        
    user_id = callback.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º
    if user_id in config.MODERATOR_CHAT_IDS:
        await callback.message.answer("–í—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –∏ –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É")
        return
        
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
    if user_id in support_chats:
        await callback.message.answer("–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π")
        return
        
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ —Å–ª–æ–≤–∞—Ä–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
    support_chats[user_id] = {
        "user_id": user_id,
        "username": callback.from_user.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    }
    
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ
    for moderator_id in config.MODERATOR_CHAT_IDS:
        try:
            await callback.bot.send_message(
                moderator_id,
                f"üì© –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\n"
                f"–û—Ç: @{callback.from_user.username or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}\n"
                f"ID: {user_id}"
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ {moderator_id}: {e}")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–∞—Ç–∞
    await state.set_state(Form.in_support_chat)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback.message.answer(
        "‚úÖ –ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–æ–∑–¥–∞–Ω. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.",
        reply_markup=get_end_chat_keyboard()
    )

@router.message(Form.in_support_chat)
async def handle_support_message(message: Message, state: FSMContext):
    if not message.from_user or not message.bot:
        return
        
    user_id = message.from_user.id
    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    print(f"–¢–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã: {support_chats}")
    print(f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã: {list(config.MODERATOR_CHAT_IDS.keys())}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —á–∞—Ç
    if user_id not in support_chats:
        print(f"–ß–∞—Ç –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await state.clear()
        await message.answer(
            "–ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω",
            reply_markup=get_start_keyboard()
        )
        return

    # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º
    for moderator_id in config.MODERATOR_CHAT_IDS:
        try:
            print(f"–ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É {moderator_id}")
            user_info = (
                f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.username or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}\n"
                f"ID: {message.from_user.id}\n"
            )
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
            if message.text:
                await message.bot.send_message(
                    chat_id=moderator_id,
                    text=f"{user_info}\n–¢–µ–∫—Å—Ç: {message.text}"
                )
            elif message.photo:
                await message.bot.send_photo(
                    chat_id=moderator_id,
                    photo=message.photo[-1].file_id,
                    caption=f"{user_info}\n{message.caption or ''}"
                )
            elif message.video:
                await message.bot.send_video(
                    chat_id=moderator_id,
                    video=message.video.file_id,
                    caption=f"{user_info}\n{message.caption or ''}"
                )
            elif message.voice:
                await message.bot.send_voice(
                    chat_id=moderator_id,
                    voice=message.voice.file_id,
                    caption=user_info
                )
            elif message.document:
                await message.bot.send_document(
                    chat_id=moderator_id,
                    document=message.document.file_id,
                    caption=f"{user_info}\n{message.caption or ''}"
                )
            elif message.audio:
                await message.bot.send_audio(
                    chat_id=moderator_id,
                    audio=message.audio.file_id,
                    caption=f"{user_info}\n{message.caption or ''}"
                )
            elif message.sticker:
                await message.bot.send_message(
                    chat_id=moderator_id,
                    text=user_info
                )
                await message.bot.send_sticker(
                    chat_id=moderator_id,
                    sticker=message.sticker.file_id
                )
            elif message.animation:
                await message.bot.send_animation(
                    chat_id=moderator_id,
                    animation=message.animation.file_id,
                    caption=f"{user_info}\n{message.caption or ''}"
                )
            
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É {moderator_id}")
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É {moderator_id}: {str(e)}")
            continue

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É")

async def end_support_chat(user_id: int, state: FSMContext, bot=None):
    if user_id in support_chats:
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —á–∞—Ç–∞
        if bot:
            for moderator_id in config.MODERATOR_CHAT_IDS:
                try:
                    await bot.send_message(
                        moderator_id,
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {support_chats[user_id]['username']} (ID: {user_id}) –∑–∞–≤–µ—Ä—à–∏–ª —á–∞—Ç"
                    )
                except:
                    pass
        del support_chats[user_id]
    await state.clear()

@router.message(F.reply_to_message)
async def handle_moderator_reply(message: Message):
    if not message.from_user or not message.bot or not message.reply_to_message:
        return
        
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –∞–¥–º–∏–Ω–æ–º
    if not is_moderator(message.from_user.id):
        return
        
    try:
        # –ò—â–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—Å—Ç–µ –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        reply_text = message.reply_to_message.text or message.reply_to_message.caption
        if not reply_text:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏")
            return
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        user_id = int(reply_text.split("ID:")[1].split()[0])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        if user_id not in support_chats:
            await message.answer("‚ùå –ß–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω")
            return
            
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –∏ –∏–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        if message.from_user.id in config.ADMIN_IDS:
            moderator_name = config.ADMIN_IDS[message.from_user.id]
        else:
            moderator_name = config.MODERATOR_CHAT_IDS[message.from_user.id]
            
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        prefix = f"–ü–æ–¥–¥–µ—Ä–∂–∫–∞ ({moderator_name}): "
        
        if message.text:
            await message.bot.send_message(user_id, f"{prefix}{message.text}")
        elif message.photo:
            await message.bot.send_photo(
                user_id,
                message.photo[-1].file_id,
                caption=prefix + (message.caption or "")
            )
        elif message.video:
            await message.bot.send_video(
                user_id,
                message.video.file_id,
                caption=prefix + (message.caption or "")
            )
        elif message.document:
            await message.bot.send_document(
                user_id,
                message.document.file_id,
                caption=prefix + (message.caption or "")
            )
        elif message.voice:
            await message.bot.send_voice(
                user_id,
                message.voice.file_id,
                caption=prefix + (message.caption or "")
            )
        elif message.sticker:
            await message.bot.send_sticker(user_id, message.sticker.file_id)
            
        await message.answer("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}") 